# CodeSkulptor runs Python programs in your browser.
# Click the upper left button to run this simple demo.

# CodeSkulptor runs in Chrome 18+, Firefox 11+, and Safari 6+.
# Some features may work in other browsers, but do not expect
# full functionality.  It does NOT run in Internet Explorer.

import simplegui,random,math
h1l=simplegui.load_image("/home/arham/folder1/pypics/helicopter1.png")
h1r=simplegui.load_image("/home/arham/folder1/pypics/helicopter1_flip.png")
h2l=simplegui.load_image("/home/arham/folder1/pypics/helicopter2.png")
h2r=simplegui.load_image("/home/arham/folder1/pypics/helicopter2_flip.png")
fl=simplegui.load_image("/home/arham/folder1/pypics/fighterjet.png")
fr=simplegui.load_image("/home/arham/folder1/pypics/fighterjet_flip.png")
tk=simplegui.load_image("/home/arham/folder1/pypics/tank.png")
bst=simplegui.load_image("/home/arham/folder1/pypics/explosion_alpha.png")
veh=[[fl,fr],[h2l,h2r],[h1l,h1r]]


s=0
vehicles=[]
projs=[]
bullets=[]
con=[]
l=0
r=0
u=0
d=0
f=0
class Tank():
    def __init__(self,pos):
        self.pos=pos
        self.angle=270
    def movel(self):
        if self.pos>50 :
            self.pos-=2
    def mover(self):
        if self.pos<750 :
            self.pos+=2
    def tr(self):
        if self.angle<=360 :
            self.angle+=1
    def tl(self):
        if self.angle>=180 :
            self.angle-=1
    
class Bullet:
    def __init__(self,pos,ang):
        self.pos=[pos,480]
        self.angle=ang
    def go(self):
        
        self.pos[0]+=5*math.cos(math.radians(self.angle))
        self.pos[1]+=5*math.sin(math.radians(self.angle))                      
        
tank=Tank(400)
        
class Plane():
    def __init__(self):
        self.pos=[0,0]
        self.typ=random.randint(1,3)
        
        self.side=random.randint(1,2)
        
        if self.side==1 :
            if self.typ==1 :
                self.pos=[0,100]
                self.vel=4
            elif self.typ==2 :
                self.pos=[0,150]
                self.vel=2
            elif self.typ==3 :
                self.pos=[0,200]
                self.vel=1
        if self.side==2 :
            if self.typ==1 :
                self.pos=[800,100]
                self.vel=-4
            elif self.typ==2 :
                self.pos=[800,150]
                self.vel=-2
            elif self.typ==3 :
                self.pos=[800,200]
                self.vel=-1
        
    def fire(self):
        projs.append(self.typ,self.pos)
    def go(self):
        self.pos[0]+=self.vel
                
class Proj():
    def __init__(self,typ,pos):
        self.pos=pos
        if typ==1 :
            self.vel=random.randint(-3,3)/3.0
        elif typ==2 :
            self.vel=random.randint(-2,2)/3.0
        elif typ==3 :
            self.vel=random.randint(-1,1)/3.0
    def go(self):
        self.pos[1]+=5
        self.pos[0]+=self.vel
    
def kd(key):
    global d,u,r,l,f
    if key==simplegui.KEY_MAP["up"]:
        u=1
        
    if key==simplegui.KEY_MAP["down"]:
        d=1
        
    if key==simplegui.KEY_MAP["right"]:
        r=1
        
    if key==simplegui.KEY_MAP["left"]:
        l=1
        
    if key==simplegui.KEY_MAP["space"]:
        f=1
        
        bullets.append(Bullet(tank.pos,tank.angle))
        
def ku(key): 
    global d,u,r,l,f
    if key==simplegui.KEY_MAP["up"]:
        u=0
        
    if key==simplegui.KEY_MAP["down"]:
        d=0
        
    if key==simplegui.KEY_MAP["right"]:
        r=0
        
    if key==simplegui.KEY_MAP["left"]:
        l=0
        
    if key==simplegui.KEY_MAP["space"]:
        f=0
def draw(canvas):
    global s,con
    canvas.draw_polygon([[0,500],[800,500],[800,600],[0,600]],1,"green","green")
    canvas.draw_image(tk,[50,25],[100,50],[tank.pos,480],[100,50])
    canvas.draw_line([tank.pos,480],[tank.pos +50*math.cos(math.radians(tank.angle)),480 +50*math.sin(math.radians(tank.angle))],5,"green")
    if l==1 :
        tank.movel()
    elif r==1 :
        tank.mover()
    if u==1 :
        tank.tl()
    if d==1 :
        tank.tr()
    
       
    for i in bullets:
        i.go()
        canvas.draw_circle(i.pos,5,1,"red","red") 
        if i.pos[1]<=0 :
            bullets.remove(i)
    if random.random()<0.005 :
        vehicles.append(Plane())
    for i in vehicles :
        i.go()
        for j in bullets :
            if j.pos[0]>(i.pos[0]-75) and j.pos[0]<(i.pos[0]+75) and j.pos[1]<(i.pos[1]+25) and j.pos[1]<(i.pos[1]-25) :
                vehicles.remove(i)
                
                con.append([i.pos[:],1])
                bullets.remove(j)
        if random.random()<0.005 :            
            projs.append(Proj(i.typ,i.pos[:]))
        if i.pos[0]>850 or i.pos[0]<-50 :
            vehicles.remove(i)
        
            
        canvas.draw_image(veh[i.typ-1][i.side-1],[75,25],[150,50],i.pos,[150,50])
    for i in projs :
        i.go()
        canvas.draw_circle(i.pos,5,1,"black","black")
        for j in bullets :
            if ((i.pos[0]-j.pos[0])**2+(i.pos[1]-j.pos[1])**2)<=100 :
                projs.remove(i)
                bullets.remove(j)
        if i.pos[1]>500  :    
            projs.remove(i)
    for i in con:
        canvas.draw_image(bst,[i[1]*128-64,64],[128,128],i[0],[128,128])
        if i[1]==24 :
            con.remove(i)
        i[1]+=1
    #for in vehicles
    

# Create a frame and assign callbacks to event handlers
frame = simplegui.create_frame("Home",800,600)
frame.set_keydown_handler(kd)
frame.set_keyup_handler(ku)
frame.set_canvas_background("aqua")
frame.set_draw_handler(draw)

# Start the frame animation
frame.start()
